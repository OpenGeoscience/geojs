//////////////////////////////////////////////////////////////////////////////
/**
 * Create a new instance of latlng
 *
 * A latlng encapsulates geodesy coordinates defined by latitude and
 * longitude (depreciated)
 *
 * @class
 * @returns {geo.latlng}
 */
//////////////////////////////////////////////////////////////////////////////
geo.latlng = function (arg1, arg2, arg3) {
  "use strict";
  if (!(this instanceof geo.latlng)) {
    return new geo.latlng(arg1, arg2, arg3);
  }

  ////////////////////////////////////////////////////////////////////////////
  /**
   * @private
   */
  ////////////////////////////////////////////////////////////////////////////
  var m_this = this,
      m_lat = arg2 === undefined && arg3 === undefined ? arg1.lat() : arg1,
      m_lng = arg2 === undefined && arg3 === undefined ? arg1.lng() : arg2,
      m_elv = arg2 === undefined && arg3 === undefined ? arg1.elv() : arg3;

  ////////////////////////////////////////////////////////////////////////////
  /**
   * Return latitude
   */
  //////////////////////////////////////////////////////////////////////////////
  this.lat = function (val) {
    if (val === undefined) {
      return m_lat;
    } else {
      m_lat = val;
    }
  };

  ////////////////////////////////////////////////////////////////////////////
  /**
   * Return longitude
   */
  //////////////////////////////////////////////////////////////////////////////
  this.lng = function (val) {
    if (val === undefined) {
      return m_lng;
    } else {
      m_lng = val;
    }
  };

  ////////////////////////////////////////////////////////////////////////////
  /**
   * Return elevation
   */
  //////////////////////////////////////////////////////////////////////////////
  this.elv = function (val) {
    if (val === undefined) {
      return m_elv;
    } else {
      m_elv = val;
    }
  };


  ////////////////////////////////////////////////////////////////////////////
  /**
   * Return x coordinate
   */
  //////////////////////////////////////////////////////////////////////////////
  this.x = function (val) {
    if (val === undefined) {
      return m_this.lng();
    } else {
      m_lng = val;
    }
  };

  ////////////////////////////////////////////////////////////////////////////
  /**
   * Return y coordinate
   */
  //////////////////////////////////////////////////////////////////////////////
  this.y = function (val) {
    if (val === undefined) {
      return m_this.lat();
    } else {
      m_lat = val;
    }
  };

  ////////////////////////////////////////////////////////////////////////////
  /**
   * Return z coordinate
   */
  //////////////////////////////////////////////////////////////////////////////
  this.z = function (val) {
    if (val === undefined) {
      return m_this.elv();
    } else {
      m_elv = val;
    }
  };


  return this;
};
