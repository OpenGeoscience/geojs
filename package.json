{
  "name": "geojs",
  "version": "0.0.0-semantically-released",
  "description": "JavaScript Geo Visualization and Analysis Library",
  "homepage": "https://github.com/OpenGeoscience/geojs",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/OpenGeoscience/geojs/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenGeoscience/geojs"
  },
  "dependencies": {
    "canvas": "^3.0.0",
    "color-name": "^2.0.0",
    "docdash": "^2.0.1",
    "earcut": "^3.0.0",
    "gl-mat3": "^2.0.0",
    "gl-mat4": "^1.2.0",
    "gl-vec3": "^1.1.3",
    "gl-vec4": "^1.0.1",
    "jquery": "^3.6.0",
    "kdbush": "^4.0.0",
    "mousetrap": "^1.6.5",
    "polybooljs": "git+https://github.com/manubb/polybooljs#eps-logic",
    "proj4": "^2.7.5"
  },
  "optionalDependencies": {
    "@egjs/hammerjs": "^2.0.8",
    "d3": "^7.8.5",
    "glslang-validator-prebuilt-predownloaded": "^0.0.2",
    "vtk.js": "*"
  },
  "devDependencies": {
    "@babel/core": "^7.17.0",
    "@babel/plugin-proposal-class-properties": "^7.16.5",
    "@babel/preset-env": "^7.16.5",
    "@fontsource/lato": "^5.1.1",
    "@jsdevtools/coverage-istanbul-loader": "^3.0.5",
    "babel-loader": "^10.0.0",
    "babel-plugin-istanbul": "^7.0.0",
    "bootstrap": "^5.0.0",
    "bootswatch": "^5.0.0",
    "codemirror": "^5.65.0",
    "colorbrewer": "^1.6.0",
    "css-loader": "^7.1.0",
    "docco": "^0.9.1",
    "eslint": "^9.25.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-jsdoc": "^50.6.9",
    "eslint-plugin-n": "^17.17.0",
    "eslint-plugin-promise": "^7.2.1",
    "expose-loader": "^5.0.0",
    "express": "^5.1.0",
    "fs-extra": "^11.0.0",
    "glob": "^11.0.0",
    "globals": "^16.0.0",
    "imports-loader": "^5.0.0",
    "jasmine-core": "^5.0.0",
    "js-yaml": "^4.1.0",
    "jsdoc": "^4.0.0",
    "jsdoc-autoprivate": "0.0.1",
    "jsonlint-mod": "^1.7.6",
    "jstransformer-markdown-it": "^3.0.0",
    "karma": "^6.3.15",
    "karma-chrome-launcher": "^3.1.0",
    "karma-coverage": "^2.1.1",
    "karma-firefox-launcher": "^2.1.2",
    "karma-jasmine": "^5.0.0",
    "karma-jasmine-html-reporter": "^2.0.0",
    "karma-sinon": "^1.0.5",
    "karma-sourcemap-loader": "^0.4.0",
    "karma-spec-reporter": "^0.0.36",
    "karma-webpack": "^5.0.0",
    "neostandard": "^0.12.1",
    "nib": "^1.1.2",
    "nise": "^6.1.1",
    "npm-run-all": "^4.1.5",
    "pako": "^2.0.4",
    "pug": "^3.0.2",
    "pug-lint": "^2.6.0",
    "pug-load": "^3.0.0",
    "raw-body": "^3.0.0",
    "resemblejs": "^5.0.0",
    "serve-index": "^1.9.1",
    "shader-loader": "git+https://github.com/Makio64/shader-loader",
    "sinon": "^20.0.0",
    "startbootstrap-agency": "^7.0.12",
    "style-loader": "^4.0.0",
    "stylelint": "<16.3.0 || >16.3.0",
    "stylelint-stylus": "^1.0.0",
    "stylus": "^0.64.0",
    "stylus-loader": "^8.0.0",
    "tar": "^7.4.3",
    "terser-webpack-plugin": "^5.3.1",
    "touch-emulator": "^1.0.0",
    "webpack": "^5.68.0",
    "webpack-cli": "^6.0.1",
    "webpack-merge": "^6.0.1",
    "webpack-string-replacer": "^0.0.20"
  },
  "overrides": {
    "npm-run-all": {
      "cross-spawn": "^7.0.5"
    }
  },
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/npm",
      [
        "@semantic-release/github",
        {
          "assets": [
            {
              "path": "dist/built/geo.js",
              "label": "Full JS distribution (geo.js)"
            },
            {
              "path": "dist/built/geo.min.js",
              "label": "Minified JS distribution (geo.min.js)"
            },
            {
              "path": "dist/built/geo.lean.js",
              "label": "Lean JS distribution (geo.lean.js)"
            },
            {
              "path": "dist/built/geo.lean.min.js",
              "label": "Lean minified JS distribution (geo.lean.min.js)"
            }
          ]
        }
      ]
    ]
  },
  "scripts": {
    "build": "npm-run-all -p build-full build-lean",
    "build-full": "webpack --config webpack.config.js",
    "build-lean": "webpack --config webpack-lean.config.js",
    "build-examples": "node examples/build.js && webpack --config webpack-examples.config.js",
    "build-website-examples": "node examples/build-website.js && webpack --config webpack-website-examples.config.js",
    "build-tutorials": "node tutorials/build.js && webpack --config webpack-tutorials.config.js",
    "build-website-tutorials": "node tutorials/build-website.js && webpack --config webpack-website-tutorials.config.js",
    "lint": "eslint --cache . --max-warnings=0",
    "format": "eslint --cache --fix . && stylelint **/*.styl --fix",
    "puglint": "pug-lint src examples",
    "stylelint": "stylelint **/*.styl",
    "glsllint": "chmod +x node_modules/glslang-validator-prebuilt-predownloaded/bin/glslangValidator.linux; find . \\( -name '*.frag' \\) -exec sh -c 'for n; do python scripts/preprocess_glsl.py \"$n\" | node_modules/glslang-validator-prebuilt-predownloaded/bin/glslangValidator.linux --stdin -S frag || exit 1; done' sh {} \\+ && find . \\( -name '*.vert' \\) -exec sh -c 'for n; do python scripts/preprocess_glsl.py \"$n\" | node_modules/glslang-validator-prebuilt-predownloaded/bin/glslangValidator.linux --stdin -S vert || exit 1; done' sh {} \\+",
    "test-headless": "GEOJS_TEST_CASE=tests/test-unit.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "test-headless-all": "GEOJS_TEST_CASE=tests/test-unit.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "test-headed": "GEOJS_TEST_CASE=tests/test-headed.js karma start karma-cov.conf.js --single-run --browsers ChromeFull",
    "tets-headed-all": "GEOJS_TEST_CASE=tests/test-headed.js karma start karma-cov.conf.js --single-run --browsers ChromeFull,FirefoxWithProxy",
    "test-headed-xvfb": "GEOJS_TEST_CASE=tests/test-headed.js xvfb-run -s '-ac -screen 0 1280x1024x24' karma start karma-cov.conf.js --single-run --browsers ChromeFull",
    "test-webglheadless": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch",
    "test-webglheadless-all": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "test-tutorials": "GEOJS_TEST_CASE=tests/tutorials.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch",
    "test-tutorialsci-all": "GEOJS_TEST_CASE=tests/tutorials.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "get-data-files": "node scripts/datastore.js dist/data",
    "ci-clean": "git clean -fxd dist -e dist/data jsdoc/tmpl jsdoc/static images lcov",
    "ci": "npm-run-all ci-build ci-test",
    "ci-build": "npm-run-all -c -p build-full build-lean docs get-data-files lint puglint glsllint stylelint build-examples build-tutorials",
    "ci-test": "npm-run-all test-headless test-webglheadless test-headed test-tutorials",
    "ci-xvfb": "npm-run-all ci-clean ci-build && TEST_SAVE_IMAGE='all' xvfb-run -s '-ac -screen 0 1280x1024x24' npm run ci-test",
    "start": "karma start karma.conf.js",
    "examples": "npm-run-all -p build-examples build-tutorials && node ./tests/runners/server.js --host \"${HOST-}\" --port ${PORT-8082} --dist",
    "docs": "jsdoc --pedantic -d dist/apidocs -r src package.json -c jsdoc.conf.json",
    "website": "cd website && npx hexo server",
    "setup-website": "cd website && npm install",
    "build-website": "npm-run-all ci-build ci-build-website",
    "ci-build-website": "cp -a dist/built/. website/source/built && bash -c '(npm run build-website-examples & npm run build-website-tutorials & wait -n && wait -n)' && cd dist && cp -ar data ../website/source/. && rm -rf ../website/source/data/tiles && rm -rf ../website/source/data/tiles.tgz && rm -rf ../website/source/data/base-images && rm -rf ../website/source/data/base-images.tgz && cp -ar apidocs/. ../website/source/apidocs && cd ../website && npm install && rm -f db.json && npx hexo generate",
    "prepublishOnly": "npm run build && cp dist/built/*.js .",
    "semantic-release": "semantic-release"
  },
  "stylelint": {
    "extends": [
      "stylelint-stylus/standard"
    ]
  },
  "keywords": [
    "map",
    "gis",
    "webgl",
    "svg"
  ],
  "main": "geo.lean.js"
}
